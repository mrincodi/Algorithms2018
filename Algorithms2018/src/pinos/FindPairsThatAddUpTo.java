package pinos;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

class Pair {
	int x;
	int y;
	Pair ( int x, int y ){
		this.x = x;
		this.y = y;

	}
}
public class FindPairsThatAddUpTo {

	public ArrayList <Pair> findPairsThatAddUpTo (ArrayList < Integer> nums, int n ){
		ArrayList <Pair> result = new ArrayList <Pair> ();
		HashMap < Integer, Integer > numCount = new HashMap < Integer, Integer > ();
		if ( nums == null || nums.size() < 2) return result;

		numCount.put( nums.get(0),1);

		for ( int i = 1; i < nums.size(); i++ ){
			int num = nums.get(i);
			if (numCount.containsKey(n-num)){
				for ( int j = 0; j < numCount.get (n-num); j++){
					result.add ( new Pair ( n-num, num));
				}
			}
			numCount.put(num, numCount.getOrDefault(num, 0) + 1);
		}
		
		return result;
	}
	public static void main(String[] args) {
		Integer [] array = { -12,-63,-55,-17,-16,95,-88,97,-48,-96,-20,-47,18,-57,-29,44,-61,51,7,87,-6,-21,-58,20,10,49,-11,-17,-38,22,68,75,-77,92,76,71,-48,-83,84,-35,39,8,51,95,30,-61,-68,-50,93,-31,22,64,41,49,-51,-33,4,-2,-87,8,-10,72,-80,26,-46,5,-59,88,35,-63,-34,27,11,-27,-49,-83,-22,44,55,56,46,98,61,42,-22,23,10,-74,86,13,-97,-11,-25,-7,-70,1,-65,-20,35,-46,64,41,-10,-50,-12,-80,-58,86,84,96,-88,6,24,51,-45,58,53,-95,79,34,-9,44,-23,-5,100,-58,-60,51,-78,15,24,42,-14,7,-32,13,-61,88,57,-53,-18,-51,-55,94,-88,-98,56,61,-10,-75,-40,-22,28,-54,49,27,19,48,16,-45,-26,-83,1,82,12,60,83,-36,-74,-99,-22,49,-7,-19,74,-58,6,14,-80,60,-80,72,-86,-43,-14,-16,-56,-16,4,-97,76,-20,66,10,5,100,-46,99,67,60,76,-51,13,27,-18,-56,66,-30,90,32,-77,-85,88,10,54,-58,27,-28,-43,100,73,79,-7,75,-76,-34,80,-94,12,66,35,-71,96,-80,97,-1,59,-66,13,11,-56,43,94,-49,42,36,93,-22,57,-24,47,-78,-70,64,-76,-43,-77,-2,85,9,-17,18,30,-45,-12,6,-32,60,29,-20,60,-3,-3,-13,-77,43,-24,60,55,-76,38,-84,-17,10,17,-68,70,-38,-55,-84,-73,-19,90,31,56,98,-63,38,-48,-59,64,27,57,-16,85,2,41,33,0,-55,32,-59,-81,84,-29,-44,-79,83,-75,7,55,-82,-41,-76,-9,50,14,-66,28,-6,-64,-87,5,98,-97,-24,-15,-11,-47,-97,-29,-53,-37,-6,39,26,58,-92,-5,94,3,-8,-48,-44,-13,-49,-71,-89,-72,25,-35,-31,-15,28,23,96,7,-2,80,-61,11,-98,54,78,-94,1,18,-44,-70,-72,-37,30,16,-38,58,49,23,65,-63,30,25,14,-85,-79,48,-31,3,-61,-11,-46,-9,-13,-50,-68,55,-30,12,27,50,81,-95,57,78,-35,-84,-28,45,80,-81,-28,92,-27,-79,-10,67,0,-29,-12,-56,12,73,-15,-27,-51,11,2,64,71,72,24,23,59,-36,-60,2,-78,56,91,57,6,-45,-58,97,-66,-78,15,40,20,-29,-49,80,-7,-71,-42,-1,48,-92,-23,-6,-45,93,-21,94,82,0,-2,-48,-55,-100,71,73,88,-83,14,-1,-33,1,37,62,-99,79,48,27,21,8,63,-23,-12,-84,-46,85,-19,-98,69,-75,7,44,-1,5,-32,-22,90,13,11,-39,-37,21,65,-74,59,-44,-41,9,-36,-63,31,41,-64,16,27,85,12,11,-93,-82,38,79,-37,-47,-23,44,24,-98,16,12,-31,-53,61,-48,-17,17,-91,20,-51,80,-44,72,5,55,98,31,-7,74,42,32,44,28,-73,21,-77,91,-94,-48,10,-74,-62,20,-65,82,10,-30,-96,-83,55,-29,-77,-42,91,49,0,3,-11,44,-95,89,94,-93,0,-71,-51,8,54,73,-69,6,-46,-36,-37,34,-86,59,18,-58,-40,73,27,87,-41,71,-85,19,-31,-11,-77,47,-25,84,13,65,27,62,-34,-29,90,-92,82,6,-97,-91,-33,-26,-59,0,93,24,-11,45,18,77,-44,46,16,-6,-64,46,-66,-34,-67,-68,40,-23,-65,85,41,18,83,59,49,-52,-46,-96,-30,18,-28,11,86,47,-98,36,61,-85,-18,87,79,31,-58,-98,73,52,99,18,-72,14,-62,78,-4,57,-84,68,-44,-62,-33,-92,33,-53,-47,66,87,47,-90,-84,-74,80,-63,37,76,-26,16,67,12,47,17,63,60,-69,-69,-84,93,41,-1,-35,-67,-26,13,18,13,52,-54,95,-33,24,0,99,45,47,-17,-52,48,-67,8,-84,79,-95,53,-95,34,-64,-31,-58,-92,27,-46,-32,-75,22,-13,22,33,74,23,-64,-51,50,-70,8,-63,75,18,-56,-95,79,58,-9,62,-77,-84,72,-44,97,68,57,17,2,-17,-82,98,83,82,69,65,-5,53,97,7,-41,57,-26,100,53,-54,46,94,61,1,59,-82,100,-72,-56,9,-39,-59,-82,-65,-73,52,-50,-7,-30,75,-39,78,31,86,-41,-24,4,-41,34,-18,-95,89,-14,-4,69,-14,28,-70,77,-51,-40,1,-41,65,89,-44,15,-24,61,17,23,-16,79,-10,-39,100,51,-26,-95,5,45,-28,80,91,60,-75,82,91,-77,-86,-9,-17,56,-21,-48,27,-86,-69,-11,-88,-50,29,-71,51,64,-46,83,25,24,30,31,33,-21,-56,71,52,-48,-31,14,74,95,7,-26,49,-89,57,80,-91,-86,-90,-2,29,-22,40,45,-93,26,-36,-87,70,20,68,-97,19,-65,-33,-46,-84,-56,55,-9,-18,-63,12,-9,99,-34,87,78,3,31,-40,19,-46,-40,15,-20,26,-15,73,-71,-78,56,70,-87,-36,-67,-23,57,-6,-83,-89,-11,-80,21,6,25,-63,14,85,21,92,-98,22,94,-18,65,18,21,-33,-46,-44,-55,-20,98,-67,-63,18,-11,56};

		ArrayList < Integer > nums  = new ArrayList < Integer> (Arrays.asList( array ));
		int n = 200;
		ArrayList <Pair>  result  = new FindPairsThatAddUpTo().findPairsThatAddUpTo(nums, n);
//
//		for ( Pair p: result )
//			System.out.println ( p.x + "," + p.y );
//		
		
		for ( int i = -200; i <= 200; i++ ){
			n = i;
			result  = new FindPairsThatAddUpTo().findPairsThatAddUpTo(nums, n);
			System.out.println ( n + " " + result.size());
		}
		

	}

}
